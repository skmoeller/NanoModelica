package Data
"
  Testdaten für das Projekt.
"
  import DAE_List;
   
  function getModel
  "
    Liefert die Eingabedaten für die Berechnung der Adjazenzmatrix.
  "
    output DAE_List.VariableArray data1;
    output DAE_List.EquationArray data2;
  algorithm
    data1 := DAE_List.VARIABLE_ARRAY(8,{DAE_List.VARIABLE(DAE_List.COMPONENT_REF("u4",NONE()),DAE_List.T_REAL(),DAE_List.K_VARIABLE(),DAE_List.NODIR(),NONE(),NONE(),""),DAE_List.VARIABLE(DAE_List.COMPONENT_REF("u3",NONE()),DAE_List.T_REAL(),DAE_List.K_VARIABLE(),DAE_List.NODIR(),NONE(),NONE(),""),DAE_List.VARIABLE(DAE_List.COMPONENT_REF("u1",NONE()),DAE_List.T_REAL(),DAE_List.K_VARIABLE(),DAE_List.NODIR(),NONE(),NONE(),""),DAE_List.VARIABLE(DAE_List.COMPONENT_REF("u",NONE()),DAE_List.T_REAL(),DAE_List.K_VARIABLE(),DAE_List.NODIR(),NONE(),NONE(),""),DAE_List.VARIABLE(DAE_List.COMPONENT_REF("i1",NONE()),DAE_List.T_REAL(),DAE_List.K_VARIABLE(),DAE_List.NODIR(),NONE(),NONE(),""),DAE_List.VARIABLE(DAE_List.COMPONENT_REF("i",NONE()),DAE_List.T_REAL(),DAE_List.K_VARIABLE(),DAE_List.NODIR(),NONE(),NONE(),""),DAE_List.VARIABLE(DAE_List.COMPONENT_REF("der",SOME(DAE_List.COMPONENT_REF("u2",NONE()))),DAE_List.T_REAL(),DAE_List.K_DER_STATE(),DAE_List.NODIR(),NONE(),NONE(),""),DAE_List.VARIABLE(DAE_List.COMPONENT_REF("der",SOME(DAE_List.COMPONENT_REF("i2",NONE()))),DAE_List.T_REAL(),DAE_List.K_DER_STATE(),DAE_List.NODIR(),NONE(),NONE(),"")},{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{DAE_List.CREF_INDEX(DAE_List.COMPONENT_REF("der",SOME(DAE_List.COMPONENT_REF("u2",NONE()))),7)},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{DAE_List.CREF_INDEX(DAE_List.COMPONENT_REF("der",SOME(DAE_List.COMPONENT_REF("i2",NONE()))),8)},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{DAE_List.CREF_INDEX(DAE_List.COMPONENT_REF("i1",NONE()),5)},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{DAE_List.CREF_INDEX(DAE_List.COMPONENT_REF("u1",NONE()),3)},{},{DAE_List.CREF_INDEX(DAE_List.COMPONENT_REF("u3",NONE()),2)},{DAE_List.CREF_INDEX(DAE_List.COMPONENT_REF("u4",NONE()),1)},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{DAE_List.CREF_INDEX(DAE_List.COMPONENT_REF("i",NONE()),6)},{},{},{},{},{},{},{},{},{},{},{},{DAE_List.CREF_INDEX(DAE_List.COMPONENT_REF("u",NONE()),4)},{},{},{},{},{},{},{},{},{},{},{},{},{},{}});
    
    data2 := DAE_List.EQUATION_ARRAY(8,{DAE_List.EQUATION(DAE_List.CREF(DAE_List.COMPONENT_REF("u3",NONE())),DAE_List.BINARY(DAE_List.CREF(DAE_List.COMPONENT_REF("R2",NONE())),DAE_List.MUL(),DAE_List.CREF(DAE_List.COMPONENT_REF("i2",NONE())))),DAE_List.EQUATION(DAE_List.CREF(DAE_List.COMPONENT_REF("u",NONE())),DAE_List.BINARY(DAE_List.CREF(DAE_List.COMPONENT_REF("A",NONE())),DAE_List.MUL(),DAE_List.CALL("sin",{DAE_List.BINARY(DAE_List.BINARY(DAE_List.BINARY(DAE_List.CREF(DAE_List.COMPONENT_REF("u1",NONE())),DAE_List.MUL(),DAE_List.BINARY(DAE_List.REAL(3.14),DAE_List.MUL(),DAE_List.REAL(1.0))),DAE_List.MUL(),DAE_List.CREF(DAE_List.COMPONENT_REF("f",NONE()))),DAE_List.MUL(),DAE_List.CREF(DAE_List.COMPONENT_REF("time",NONE())))}))),DAE_List.EQUATION(DAE_List.BINARY(DAE_List.CREF(DAE_List.COMPONENT_REF("u1",NONE())),DAE_List.ADD(),DAE_List.CREF(DAE_List.COMPONENT_REF("u2",NONE()))),DAE_List.CREF(DAE_List.COMPONENT_REF("u",NONE()))),DAE_List.EQUATION(DAE_List.CREF(DAE_List.COMPONENT_REF("u1",NONE())),DAE_List.BINARY(DAE_List.CREF(DAE_List.COMPONENT_REF("R1",NONE())),DAE_List.MUL(),DAE_List.CREF(DAE_List.COMPONENT_REF("i1",NONE())))),DAE_List.EQUATION(DAE_List.CREF(DAE_List.COMPONENT_REF("i",NONE())),DAE_List.BINARY(DAE_List.CREF(DAE_List.COMPONENT_REF("i2",NONE())),DAE_List.ADD(),DAE_List.CREF(DAE_List.COMPONENT_REF("i1",NONE())))),DAE_List.EQUATION(DAE_List.CREF(DAE_List.COMPONENT_REF("i1",NONE())),DAE_List.BINARY(DAE_List.CREF(DAE_List.COMPONENT_REF("C",NONE())),DAE_List.MUL(),DAE_List.CREF(DAE_List.COMPONENT_REF("der",SOME(DAE_List.COMPONENT_REF("u2",NONE())))))),DAE_List.EQUATION(DAE_List.CREF(DAE_List.COMPONENT_REF("u",NONE())),DAE_List.BINARY(DAE_List.CREF(DAE_List.COMPONENT_REF("u4",NONE())),DAE_List.ADD(),DAE_List.CREF(DAE_List.COMPONENT_REF("u3",NONE())))),DAE_List.EQUATION(DAE_List.CREF(DAE_List.COMPONENT_REF("u4",NONE())),DAE_List.BINARY(DAE_List.CREF(DAE_List.COMPONENT_REF("der",SOME(DAE_List.COMPONENT_REF("i2",NONE())))),DAE_List.MUL(),DAE_List.CREF(DAE_List.COMPONENT_REF("L",NONE()))))});
  end getModel;  
end Data;
